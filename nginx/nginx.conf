events {
    worker_connections 1024;
}

http {
    # Настройки для проксирования
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # HTTP сервер - редирект на HTTPS
    server {
        listen 80;
        server_name vmestedate.ru www.vmestedate.ru;

        # Редирект только для HTTP запросов
        return 301 https://$server_name$request_uri;
    }

    # HTTPS сервер
    server {
        listen 443 ssl http2;
        server_name vmestedate.ru www.vmestedate.ru;

        # SSL настройки
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

<<<<<<< HEAD
        # Логирование запросов к сервису
        limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
        limit_req_zone  $binary_remote_addr zone=req_limit:10m rate=5r/s;

        # Дополнительные SSL настройки
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
=======
<<<<<<< HEAD
    # Прокси для WebSocket Secure (WSS)
    location /ws/ {
        proxy_pass http://client:80/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Прокси для основного контента
    location / {
        proxy_read_timeout 1m;
        proxy_connect_timeout 1m;
        proxy_pass http://client:80/;
=======
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Прокси для WebSocket Secure (WSS)
        location /ws/ {
            proxy_pass http://client:4173/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
>>>>>>> 292a2717c99fc7c1a70c56114e69ce01f087e70d
>>>>>>> 2d067ea881c28638a205b0b9ac1e41a8ff83c562

        # Прокси для API
        location /api/ {
            proxy_read_timeout 1m;
            proxy_connect_timeout 1m;
            proxy_send_timeout 1m;

            # Убираем /api/ из URL перед проксированием
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://api:3000/;

            # Дополнительные заголовки для API
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # Документация Swagger API
        location /docs/ {
            proxy_pass http://api:3000/docs/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
        }

        # WebSocket для Socket.IO
        location /socket.io/ {
            proxy_http_version 1.1;
            proxy_redirect off;

            proxy_pass http://ws:7000/socket.io/;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy false;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_read_timeout 360s;
            proxy_connect_timeout 360s;
            proxy_send_timeout 360s;
        }

        # WebSocket для клиентского приложения
        location /ws/ {
            proxy_pass http://client:80/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Отправка и кеширование статических файлов
        location ~* \.(js|css|png|jpg|jpeg|webm|gif|mp3|mp4|ogg|ico|svg|woff|woff2|eot|ttf|otf|map|webp|avif|json|xml|wasm)$ {
            proxy_read_timeout 1m;
            proxy_connect_timeout 1m;
            proxy_send_timeout 1m;

            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://client:80;
        }

        # Основной контент (клиентское приложение)
        location / {
            proxy_read_timeout 1m;
            proxy_connect_timeout 1m;

            rewrite ^ / break;
            proxy_pass http://client:80;
        }

        # Обработка ошибок
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
